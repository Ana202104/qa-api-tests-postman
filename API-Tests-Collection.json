{
  "info": {
    "name": "API Test Collection",
    "_postman_id": "11111111-2222-3333-4444-555555555555",
    "description": "Sample API tests using JSONPlaceholder (GET/POST/PUT/DELETE). Includes basic assertions.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /users",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const data = pm.response.json();",
              "pm.test(\"Response is an array\", function () {",
              "  pm.expect(Array.isArray(data)).to.be.true;",
              "});",
              "pm.test(\"Array is not empty\", function () {",
              "  pm.expect(data.length).to.be.above(0);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /users/:id",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const user = pm.response.json();",
              "pm.test(\"User has id\", function () {",
              "  pm.expect(user).to.have.property('id');",
              "});",
              "pm.test(\"User has email\", function () {",
              "  pm.expect(user).to.have.property('email');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /users",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Ana QA\",\n  \"email\": \"ana.qa@example.com\"\n}"
        },
        "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "  pm.response.to.have.status(201);",
              "});",
              "const body = pm.response.json();",
              "pm.test(\"Returns an id\", function () {",
              "  pm.expect(body).to.have.property('id');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT /users/:id",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Ana QA Updated\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const body = pm.response.json();",
              "pm.test(\"Name updated\", function () {",
              "  pm.expect(body.name).to.eql(\"Ana QA Updated\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE /users/:id",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
